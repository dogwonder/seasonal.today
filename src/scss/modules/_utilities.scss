//Accessibility

//Text meant only for screen readers
.visually-hidden, 
%visually-hidden {
  height: 1px;
  width: 1px;
  position: absolute !important;
  overflow: hidden;
  padding: 0;
  /* many screen reader and browser combinations announce broken words as they would appear visually */
  word-wrap: normal !important;
  white-space: nowrap;
  clip: rect(0, 0, 0, 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  border: 0;
  &:focus {
    background-color: #f1f1f1;
    border-radius: 3px;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
    clip: auto !important;
    -webkit-clip-path: none;
    clip-path: none;
    color: var(--teal-dark);
    display: block;
    font-weight: 700;
    height: auto;
    right: 5px;
    line-height: normal;
    padding: 15px 23px 14px;
    text-decoration: none;
    top: 5px;
    width: auto;
    z-index: 100000;
  }
}

//Skip link
.skip-link {
  position: absolute!important;
  width: 1px!important;
  height: 1px!important;
  margin: 0!important;
  overflow: hidden!important;
  clip: rect(0 0 0 0)!important;
  -webkit-clip-path: inset(50%)!important;
  clip-path: inset(50%)!important;
  white-space: nowrap!important;
  font-family: Colfax,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-decoration: underline;
  font-size: 14px;
  font-size: .875rem;
  line-height: 1.1428571429;
  display: block;
  padding: 10px 15px;
}

.skip-link:active, .skip-link:focus {
  color: #000!important;
  text-decoration: underline;
  outline: 3px solid var(--focus);
  outline-offset: 0;
  background-color: var(--focus);
  position: static!important;
  width: auto!important;
  height: auto!important;
  margin: inherit!important;
  overflow: visible!important;
  clip: auto!important;
  -webkit-clip-path: none!important;
  clip-path: none!important;
  white-space: inherit!important;
}

//For SVG patterns and sprites
.defs-only {
	position: absolute !important;
	height: 0 !important; 
  width: 0 !important;
	overflow: none !important;
	left: -100% !important;
}

//Add a little margin (2 x x-height) to jump links - https://piccalil.li/quick-tip/add-scroll-margin-to-all-elements-which-can-be-targeted
[id] {
  scroll-margin-top: 2ex;
}

//Container
//Wrapper utility https://piccalil.li/quick-tip/use-css-clamp-to-create-a-more-flexible-wrapper-utility
//We reset the vertical padding on this for umbgrid and block--table components
%container, 
.container {
  width: 90vw;
  width: clamp(var(--contentWidthSmall), 90vw, var(--containerWidth));
  margin-left: auto;
  margin-right: auto;
  padding: var(--gap-medium) 0;
  position: relative;
}


// The stack
// Usage <div class="stack"><div><!-- child --></div><div><!-- child --></div></div>
// The mixin @include stack(1rem);
@mixin stack($measure: 1em) {

	display: flex;
	flex-direction: column;
	justify-content: flex-start;

	& > * + * {

		margin-top: $measure;

	}

}

.stack {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.stack > * {
  /* ↓ Any extant vertical margins are removed */
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.stack > * + * {
  /* ↓ Top margin is only applied to successive elements */
  margin-top: var(--gap-medium) !important;
}

.stack-large > * + * {
  margin-top: var(--gap-large) !important;
}
.stack-small > * + * {
  margin-top: var(--gap-small) !important;
}


//More modern aspect ratio
%frame, 
.frame {
  aspect-ratio: 3 / 2;
  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

//Custom list items
%list, 
.list {
  //CSS triangle
  list-style-type: none;
  padding: 0;
  margin: 0;
  li {
    padding: 0 0 0 25px;
    margin-bottom: var(--gap-small);
    &:before {
      font-size: 80%;
      content:"\25B6";
      color: var(--secondary);
      margin-right: 0.5rem;
    }
  }
}

//Fluid spacing - e.g. add mbf-large
@each $key in map-keys(map-get($spaces, gaps)) {
  .m-#{$key} {
    margin: clampCalc(map-deep-get($spaces, gaps $key sm), map-deep-get($spaces, gaps $key lg), sm, lg) !important;
  }
  .p-#{$key} {
    padding: clampCalc(map-deep-get($spaces, gaps $key sm), map-deep-get($spaces, gaps $key lg), sm, lg) !important;
  }
  .mtf-#{$key} {
    margin-top: clampCalc(map-deep-get($spaces, gaps $key sm), map-deep-get($spaces, gaps $key lg), sm, lg) !important;
  }
  .mbf-#{$key} {
    margin-bottom: clampCalc(map-deep-get($spaces, gaps $key sm), map-deep-get($spaces, gaps $key lg), sm, lg) !important;
  }
  .mrf-#{$key} {
    margin-right: clampCalc(map-deep-get($spaces, gaps $key sm), map-deep-get($spaces, gaps $key lg), sm, lg) !important;
  }
  .mlf-#{$key} {
    margin-left: clampCalc(map-deep-get($spaces, gaps $key sm), map-deep-get($spaces, gaps $key lg), sm, lg) !important;
  }
  .ptf-#{$key} {
    padding-top: clampCalc(map-deep-get($spaces, gaps $key sm), map-deep-get($spaces, gaps $key lg), sm, lg) !important;
  }
  .pbf-#{$key} {
    padding-bottom: clampCalc(map-deep-get($spaces, gaps $key sm), map-deep-get($spaces, gaps $key lg), sm, lg) !important;
  }
  .plf-#{$key} {
    padding-left: clampCalc(map-deep-get($spaces, gaps $key sm), map-deep-get($spaces, gaps $key lg), sm, lg) !important;
  }
  .prf-#{$key} {
    padding-right: clampCalc(map-deep-get($spaces, gaps $key sm), map-deep-get($spaces, gaps $key lg), sm, lg) !important;
  }
}